from itertools import groupby

cars_list = [('BMW', 'X6'), ('Toyota', 'Yaris'), ('Fiat', '500'), ('Fiat', 'Panda'), ('Toyota', 'Camry 30')]

sorted_cars = sorted(cars_list, key=lambda x: x[0])

for manufacturer, group in groupby(sorted_cars, key=lambda x: x[0]):
    group_list = list(group)
    count = len(group_list)
    print(f"{manufacturer} {count}", end=" - ")
    for _, model in group_list:
        print(model)



#from itertools import groupby: Эта строка импортирует функцию groupby из модуля itertools, которая используется для группировки элементов на основе указанного ключа.
#cars_list: Это список кортежей автомобилей. Каждый кортеж содержит два элемента: производителя (например, "BMW", "Toyota") и модель автомобиля (например, "X6", "Yaris").
#sorted_cars: Эта строка сортирует cars_list на основе производителя (первый элемент каждого кортежа), используя функцию sorted и лямбда-функцию в качестве ключа. Это гарантирует, что автомобили одного и того же производителя будут сгруппированы вместе на последующих этапах.
#Затем код вводит цикл, используя groupby для группировки автомобилей по производителю:
#для производителя, group в groupby(sorted_cars, key=lambda x: x[0]): Этот цикл перебирает отсортированные автомобили и группирует их по производителю. manufacturer - это название производителя (например, "BMW", "Toyota"), а group - это итератор, содержащий автомобили одного и того же производителя.
#group_list = список(группа): Эта строка преобразует итератор группы в список, что упрощает работу с ним.
#количество = len(group_list): Он вычисляет количество автомобилей в группе, получая длину group_list.
#print(f"{производитель} {количество}", end=" - "): В этой строке выводится название производителя и количество автомобилей этого производителя, разделенных пробелом, за которым следует " - ".
#для _, model в group_list:: Этот цикл выполняет итерацию по автомобилям в группе, распаковывая модель автомобиля и печатая ее. Символ подчеркивания _ используется в качестве заполнителя для названия производителя, которое не требуется в этом внутреннем цикле.
#Код эффективно группирует и подсчитывает автомобили по производителям, выводя название производителя, количество автомобилей и модели для каждого производителя.